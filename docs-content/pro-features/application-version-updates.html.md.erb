---
title: Application version updates in Spring Cloud Data Flow
owner: Spring Cloud Data Flow Release Engineering
---

Here you can learn how to use the new Pro server feature for managing <%= vars.scdf_image %> versions for stream and task apps used with <%= vars.scdf_product_full_name %> (<%= vars.scdf_product_short_name %>).

## <a id='new-application-version-alerts'></a> New application version alerts and continuous delivery

The SCDF Pro dashboard can register applications by automatically retrieving the available <%= vars.scdf_tags %> from <%= vars.scdf_images %> in the backing <%= vars.scdf_registry %>. With this automation in place, users can update existing Streams with these new versions of the registered applications.

After an application's <%= vars.scdf_image %> is registered in SCDF's application registry, the server retrieves the latest available <%= vars.scdf_tags %> associated with the image by using the <%= vars.scdf_registry %> REST API.

<% if vars.scdf_product == 'K8s' %>
If the <%= vars.scdf_registry_name %> that is being used requires authentication, see the [Managing Authentication](#authentication) section.
<% end %>

<% if vars.scdf_product == 'TAS' %>
If the repository that is being used requires authentication, see the [Maven documentation](https://docs.spring.io/spring-cloud-dataflow/docs/current/reference/htmlsingle/#configuration-maven).
<% end %>

<p class="note">
<span class="note__title">Note</span>
The current implementation checks for new <%= vars.scdf_tags %> available above (that is, more recent than) the current default version. For instance, if you have an app registered with a version of 2.0.0, all the versions above 2.0.0 are retrieved (if available) and listed in the SCDF Dashboard as available <%= vars.scdf_tags %>.</p>

You can update the registered <%= vars.scdf_images %> from the **Applications** page. You can check for:

* updates on all the registered applications
* updates on the applications that are used by the Streams
* updates on the applications that are used by the Tasks

![Check updates dialog box: buttons are Check updates and Cancel.](./images/Applications_Check_Updates.png)

<p class="note">
<span class="note__title">Note</span>
This operation involves getting the <%= vars.scdf_tags %> of all the corresponding images, so it may take a few seconds to minutes, depending on how many applications you have registered.</p>

After the updates are available, the corresponding application is updated with the `i` icon to alert that there are new versions available. For instance, in the following screenshot, you can see that the application `filter` has new versions available.

![Applications table: Columns are Name, Type, Version, URI, and Metadata URI. ](./images/Applications_List.png)

After the application versions are available, you can either:

* Register the available version(s) with SCDF by choosing them individually.
* For stream applications, you can update the streams with the new versions of the applications.

### <a id='bulk-stream-updates'></a> Bulk stream updates

The following example shows how to perform a Stream update:

Go to **Streams** page to see the list of streams.

![Streams table: columns are Name, Description, Definition, and Status.](./images/Streams_List.png)

Click **Update Version(s)**.

After clicking **Update Version(s)**, all the applications that are used by the Streams are updated with the available versions, and the **Applications** form is shown with the list of applications that have new versions available.

![Applications dialog box showing list of applications for which there are new versions.](./images/Stream_Update_Apps_List.png)

Here you can choose the applications you would like to update. Proceed by clicking **Next**.

![Applications dialog box: Buttons are Cancel and Next. The Next button becomes available if you select updates from the table.](./images/Stream_Update_Apps_Select.png)

For each selected application, you can see the list of available versions.

The available versions shown here are the net-new versions for the same application.

You can also choose a version to be the default version for the application in the SCDF application registry. Going forward, this new version is used as the default version for stream deployments.

![The http pane: select the new version.](./images/Stream_Update_AppVersionSelect.png)

You can select the version for all the other applications by selecting the application and the version on the dialog box.

![The Time pane: select the new version.](./images/Stream_Update_AnotherApp_VersionSelect.png)

After the new versions are selected for the applications, you can:

1. Register the newly selected version of each of the application that is part of the stream.
2. Mark the selected version as the default version (if there is a preferred version).
3. Run the Stream update operation to update the version for each application to the selected version.

![Update versions: Operations pane, no selections made](./images/Stream_Update_Operations_List.png)

![Update versions: Operations pane, 2 operations selected](./images/Stream_Update.png)

![Update versions: Operations pane, all operations selected](./images/Stream_Update_Result.png)

### <a id='single-stream-update'></a> Single stream update

If you prefer to update a single stream by choosing only the specific versions of the applications associated with that stream, then you can perform a single stream update by setting the application versions.

![Streams table: perform update from the table.](./images/Single_Stream_Selection.png)

After selecting the stream, you can choose the application versions and click **Update the stream**.

![Update application version dialog box: buttons are Update the Stream and Cancel.](./images/Single_Stream_Select_Version.png)

### <a id='individual-application-update'></a> Individual application update

You can update the versions of the individual applications.

Go to the **Applications** page.

![Applications pane with table containing a list of Applications.](./images/Applications_List.png)

Click the ellipsis icon available to the left of the individual application and click **Manage Version**.

![Menu with 3 options: Details, Manage Version, and Unregister](./images/Applications_List_Manage_Version.png)

You see a form where you can select the latest available versions and mark them to be registered with SCDF.

You can register multiple versions this way.

![Manage versions dialog box with list of versions.](./images/Application_Manage_Version.png)

![Manage versions dialog box with version selected. Register versions button is now active.](./images/Application_Manage_Version_Select.png)

You also have the option to mark any of the currently selected versions as the default version for the application and proceed with the registration.

![Confirm Make default version dialog box. Click Make Default button.](./images/Application_MakeDefault.png)

![In-progress dialog box.](./images/Application_Register.png)

<% if vars.scdf_product == 'K8s' %>
### <a id='authentication'></a> Managing authentication

The credentials used in the REST request to connect to the container registry are, by default, obtained from the respective target platform account's `imagePullSecret`.

If you have already configured the `imagePullSecret` (of type `.dockerconfigjson` for the container registry) to SCDF and Skipper deployment accounts, as documented in [SCDF installation documentation](../configuring-installation-values.html#imagePullSecrets),the same secret is used to connect to the container registry to retrieve the latest tags of the registered applications.

If you use container images from multiple container registries (apart from the one configured through the default `imagePullSecret`), you can add the container registry credentials to SCDF's container registry configuration. For more information, see the [open-source Spring Cloud Data Flow documentation](https://dataflow.spring.io/docs/applications/application-metadata/#metadata-container-image-label).
<% end %>
